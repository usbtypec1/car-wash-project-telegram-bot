from collections.abc import Iterable

from aiogram.types import (
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    InputMediaPhoto,
    KeyboardButton,
    ReplyKeyboardMarkup,
)
from aiogram.utils.media_group import MediaType

from callback_data.prefixes import CallbackDataPrefix
from models import ShiftFinishResult
from views.base import MediaGroupView, TextView
from views.button_texts import ButtonText

__all__ = (
    'ShiftFinishConfirmView',
    'StaffShiftFinishedView',
    'ShiftFinishPhotosView',
    'StaffShiftFinishedNotificationView',
    'ShiftFinishPhotoConfirmView',
    'ShiftFinishConfirmAllView',
    'StaffFirstShiftFinishedView',
)


class ShiftFinishConfirmView(TextView):
    __accept_button = InlineKeyboardButton(
        text='‚úÖ –î–∞',
        callback_data=CallbackDataPrefix.SHIFT_FINISH_FLOW_START_ACCEPT,
    )
    __reject_button = InlineKeyboardButton(
        text='‚ùå –ù–µ—Ç',
        callback_data=CallbackDataPrefix
        .SHIFT_FINISH_FLOW_START_REJECT,
    )
    text = '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–º–µ–Ω—ã?'
    reply_markup = InlineKeyboardMarkup(
        inline_keyboard=[[__accept_button, __reject_button]],
    )


class ShiftFinishPhotoConfirmView(TextView):
    text = (
        '‚úÖ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –ø—Ä–∏–Ω—è—Ç–∞\n'
        '–ß—Ç–æ–±—ã –∑–∞–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—é–¥–∞ –Ω–æ–≤–æ–µ'
    )

    def __init__(self, confirm_button_callback_data: str):
        self.__confirm_button_callback_data = confirm_button_callback_data

    def get_reply_markup(self) -> InlineKeyboardMarkup:
        return InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(
                        text='‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Ñ–æ—Ç–æ',
                        callback_data=self.__confirm_button_callback_data,
                    )
                ]
            ]
        )


class ShiftFinishPhotosView(MediaGroupView):
    caption = '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö'

    def __init__(self, photo_file_ids: Iterable[str]):
        self.__photo_file_ids = tuple(photo_file_ids)

    def get_medias(self) -> list[MediaType]:
        return [
            InputMediaPhoto(
                media=photo_file_id,
            )
            for photo_file_id in self.__photo_file_ids
        ]


class ShiftFinishConfirmAllView(TextView):
    text = '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–º–µ–Ω—ã?'
    reply_markup = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text='‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å',
                    callback_data=CallbackDataPrefix.SHIFT_FINISH_ACCEPT,
                ),
                InlineKeyboardButton(
                    text='‚ùå –û—Ç–º–µ–Ω–∏—Ç—å',
                    callback_data=CallbackDataPrefix.SHIFT_FINISH_REJECT,
                )
            ],
        ],
    )


class StaffShiftFinishedNotificationView(MediaGroupView):

    def __init__(
            self,
            shift_finish_result: ShiftFinishResult,
            photo_file_ids: Iterable[str],
    ):
        self.__shift_finish_result = shift_finish_result
        self.__photo_file_ids = tuple(photo_file_ids)

    def get_medias(self) -> list[MediaType] | None:
        return [
            InputMediaPhoto(media=photo_file_id)
            for photo_file_id in self.__photo_file_ids
        ]

    def get_caption(self) -> str:
        lines: list[str] = [
            f'‚ùóÔ∏è –°–æ—Ç—Ä—É–¥–Ω–∏–∫ {self.__shift_finish_result.staff_full_name}'
            f' –∑–∞–≤–µ—Ä—à–∏–ª —Å–º–µ–Ω—É\n',
        ]

        if self.__shift_finish_result.car_numbers:
            lines.append('üöó –°–ø–∏—Å–æ–∫ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –º–∞—à–∏–Ω:')
        else:
            lines.append('–ù–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –º–∞—à–∏–Ω')
        for car_number in self.__shift_finish_result.car_numbers:
            lines.append(car_number)

        return '\n'.join(lines)


class StaffFirstShiftFinishedView(TextView):
    text = (
        '–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–∞–±–æ—Ç—É! –ó–∞–ø–æ–ª–Ω–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≥—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã.'
        ' –î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã" –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ'
        ' "–°–¥–µ–ª–∞—é —ç—Ç–æ –ø–æ–∑–∂–µ", –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫ –ø–æ–∑–∂–µ.'
    )
    reply_markup = ReplyKeyboardMarkup(
        resize_keyboard=True,
        keyboard=[
            [
                KeyboardButton(text=ButtonText.SHIFT_SCHEDULE),
                KeyboardButton(text=ButtonText.LATER)
            ],
        ],
    )


class StaffShiftFinishedView(TextView):
    text = (
        '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤—Å–µ –æ—Ç—á–µ—Ç—ã –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –≤–µ—Ä–Ω–æ!'
        ' –°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–∞–±–æ—Ç—É –∏ —Ö–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!'
    )
